@model Bespoker.Web.Models.PokerSessionViewModel

@{
    ViewBag.Title = Model.Name;
}

<h2>Poker Session <span data-bind="text: Name"></span></h2>

<div id="actionButtons">
    <a id="showCards" class="btn btn-primary" data-bind="visible: !CardsRevealed()">Show Cards</a>
    <a id="hideCards" class="btn btn-primary" data-bind="visible: CardsRevealed()">Hide Cards</a>
    <a id="changeName" class="btn btn-info">Change Name</a>
    <a id="reset" class="btn btn-danger">Reset</a>
</div>

<h3>Choose Your Card</h3>
<div id="cardChooser">
    <span class="card">0</span>
    <span class="card">&frac12;</span>
    <span class="card">1</span>
    <span class="card">2</span>
    <span class="card">3</span>
    <span class="card">5</span>
    <span class="card">8</span>
    <span class="card">13</span>
    <span class="card">20</span>
    <span class="card">40</span>
    <span class="card">100</span>
    <span class="card">?</span>
    <span class="card">&infin;</span>
</div>

<h3>Selected Cards</h3>
<div id="selectedCards" data-bind="foreach: Players">
    <div class="selectedCardContainer" data-bind="css: { currentPlayer: $root.CurrentConnectionId() == ConnectionId() }">
        <div class="playerName">
            <span data-bind="text: Name"></span>
        </div>
        <div class="card selectedCard hidden" data-bind="text: SelectedCard() || 'X', css: { hidden: !$root.CardsRevealed() }"></div>
        <div class="card noCardChosen hidden" data-bind="css: { hidden: SelectedCard() || $root.CardsRevealed() }"><span class="glyphicon glyphicon-time"></span></div>
        <div class="card cardChosen hidden" data-bind="css: { hidden: !SelectedCard() || $root.CardsRevealed() }"><span class="glyphicon glyphicon-ok"></span></div>
    </div>
</div>

@section scripts {
    <script src="~/Scripts/jquery.signalR-2.0.3.min.js"></script>
    <script src="~/Scripts/knockout-3.1.0.debug.js"></script>
    <script src="~/Scripts/knockout.mapping-latest.js"></script>
    <script src="~/signalr/hubs"></script>

    <script>
        $(document).ready(function () {
            var sessionName = '@Model.Name';
            var hub = $.connection.bespokerHub;
            var viewModel = null;

            hub.client.initSession = function (session) {
                // Init viewmodel based on session
                viewModel = ko.mapping.fromJS(session);
                viewModel.CurrentConnectionId = ko.observable(hub.connection.id);
                ko.applyBindings(viewModel);
            };

            hub.client.playerJoined = function (player) {
                viewModel.Players.push(ko.mapping.fromJS(player));
            };

            hub.client.cardSelected = function (playerId, cardValue) {
                // Find player by Id
                var players = viewModel.Players();
                for (var i = 0; i < players.length; i++) {
                    var player = players[i];
                    if (player.Id() == playerId) {
                        // Update selected card value
                        player.SelectedCard(cardValue);
                        break;
                    }
                }
            };

            hub.client.showCards = function () {
                viewModel.CardsRevealed(true);
            };

            hub.client.hideCards = function () {
                viewModel.CardsRevealed(false);
            };

            hub.client.reset = function (session) {
                // Update viewmodel based on new session data
                viewModel = ko.mapping.fromJS(session, viewModel);

                // UI should show no cards selected
                $('#cardChooser .card').removeClass('selected');
            };

            // Initialize connection to SignalR
            $.connection.hub.start().done(function () {
                hub.server.registerForSession(sessionName);
            });

            var cards = $('#cardChooser .card');
            cards.click(function () {
                // Is this card already selected?
                var card = $(this);
                if (card.hasClass('selected')) {
                    card.removeClass('selected');
                    hub.server.selectCard(null);
                }
                else {
                    $(cards).removeClass('selected');
                    card.addClass('selected');
                    hub.server.selectCard(card.text());
                }
            });

            $('#showCards').click(function () {
                hub.server.showCards();
            });

            $('#hideCards').click(function () {
                hub.server.hideCards();
            });

            $('#reset').click(function () {
                hub.server.reset();
            });

            $('#changeName').click(function () {
                var newName = prompt('Change name to what?');
                hub.server.changeName(newName);
            });

            hub.client.newPlayerName = function (playerId, newName) {
                // Loop through all the players, find the one in question, and update name
                var players = viewModel.Players();
                for (var i = 0; i < players.length; i++) {
                    var player = players[i];
                    if (player.Id() == playerId) {
                        // Update selected card value
                        player.Name(newName);
                        break;
                    }
                }
            };

            hub.client.removePlayer = function (playerId) {
                // Loop through all the players, find the one in question, and update name
                var players = viewModel.Players();
                for (var i = 0; i < players.length; i++) {
                    var player = players[i];
                    if (player.Id() == playerId) {
                        viewModel.Players.remove(player);
                        break;
                    }
                }
            };
        });
    </script>
}